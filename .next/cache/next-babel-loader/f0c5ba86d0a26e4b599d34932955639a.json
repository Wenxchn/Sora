{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\wenxc\\\\Desktop\\\\Sora\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Link from 'next/link';\nimport { Button, Card, Row, Col } from 'react-bootstrap';\n\nconst Home = () => {\n  _s();\n\n  const {\n    0: anime,\n    1: setAnimes\n  } = useState({\n    title: '',\n    score: '',\n    image: ''\n  }); // const [topMangas, setTopMangas] = useState([])\n\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const findRandomAnime = async () => {\n    let random = await getRandomInt(50);\n    let res = await fetch(`https://api.jikan.moe/v3/top/anime/${random}/tv`);\n    let data = await res.json();\n    setTopAnimes({\n      title: data.top[random].title,\n      score: data.top[random].score,\n      image: data.top[random].image_url\n    });\n  }; // const findRandomManga = async () => {\n  //     let random = await getRandomInt(50)\n  //     let res = await fetch(`https://api.jikan.moe/v3/top/manga/${random}/manga`)\n  //     let data = await res.json()\n  //     setTopMangas([])\n  //     for (let i = 0; i < data.top.length; i++) {\n  //         setTopMangas([...topMangas, { title: data.top[i].title, score: data.top[i].score, id: topMangas.length, image: data.top[i].image_url}])\n  //     }\n  //     console.log(data)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-2\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-primary\",\n          children: \"Sora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/Wen\",\n          children: \"My Media List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => findRandomAnime(),\n          children: \"Get Random Anime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [anime, \" | \", anime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: anime,\n              className: \"col-md-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"I4KuTajY1kikfgH27RiM1dJhFpo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/wenxc/Desktop/Sora/pages/index.js"],"names":["React","useState","Link","Button","Card","Row","Col","Home","anime","setAnimes","title","score","image","getRandomInt","max","Math","floor","random","findRandomAnime","res","fetch","data","json","setTopAnimes","top","image_url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAqBR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAC,EAAlB;AAAsBC,IAAAA,KAAK,EAAC;AAA5B,GAAD,CAAnC,CADe,CAEf;;AAEA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1B,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACH,GAFD;;AAIA,QAAMI,eAAe,GAAG,YAAY;AAChC,QAAID,MAAM,GAAG,MAAMJ,YAAY,CAAC,EAAD,CAA/B;AACA,QAAIM,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,MAAO,KAA9C,CAArB;AACA,QAAII,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,IAAAA,YAAY,CAAC;AAAEb,MAAAA,KAAK,EAAEW,IAAI,CAACG,GAAL,CAASP,MAAT,EAAiBP,KAA1B;AAAiCC,MAAAA,KAAK,EAAEU,IAAI,CAACG,GAAL,CAASP,MAAT,EAAiBN,KAAzD;AAAgEC,MAAAA,KAAK,EAAES,IAAI,CAACG,GAAL,CAASP,MAAT,EAAiBQ;AAAxF,KAAD,CAAZ;AACH,GALD,CARe,CAef;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMP,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,IAAD;AAAA,iCACQ,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,yBAAaV,KAAb,SAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,GAAN;AAAU,cAAA,GAAG,EAAEA,KAAf;AAAsB,cAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCF,CAhEF;;GAAMD,I;;KAAAA,I;AAkEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Link from 'next/link'\r\nimport { Button, Card, Row, Col } from 'react-bootstrap'\r\n\r\nconst Home = () => {\r\n    const [anime, setAnimes] = useState({title: '', score:'', image:''})\r\n    // const [topMangas, setTopMangas] = useState([])\r\n\r\n    const getRandomInt = (max) => {\r\n        return Math.floor(Math.random() * Math.floor(max))\r\n    }\r\n\r\n    const findRandomAnime = async () => {\r\n        let random = await getRandomInt(50)\r\n        let res = await fetch(`https://api.jikan.moe/v3/top/anime/${random}/tv`)\r\n        let data = await res.json()\r\n        setTopAnimes({ title: data.top[random].title, score: data.top[random].score, image: data.top[random].image_url})\r\n    }\r\n\r\n    // const findRandomManga = async () => {\r\n    //     let random = await getRandomInt(50)\r\n    //     let res = await fetch(`https://api.jikan.moe/v3/top/manga/${random}/manga`)\r\n    //     let data = await res.json()\r\n\r\n    //     setTopMangas([])\r\n\r\n    //     for (let i = 0; i < data.top.length; i++) {\r\n    //         setTopMangas([...topMangas, { title: data.top[i].title, score: data.top[i].score, id: topMangas.length, image: data.top[i].image_url}])\r\n    //     }\r\n    //     console.log(data)\r\n    // }\r\n\r\n    return (\r\n        <div className='ml-2'>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className='text-primary'>Sora</h1>\r\n                    <Link href='/Wen'>My Media List</Link>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={() => findRandomAnime()}>Get Random Anime</Button>\r\n                    {/* <Button onClick={() => findRandomManga()}>Get Random Manga</Button> */}\r\n                    <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>{anime} | {anime}</Card.Title>\r\n                                <Card.Img src={anime} className='col-md-2'></Card.Img>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    {/* {topAnimes.map(anime => (\r\n                        <Card key={anime.id}>\r\n                            <Card.Body>\r\n                                <Card.Title>{anime.title} | {anime.score}</Card.Title>\r\n                                <Card.Img src={anime.image} className='col-md-2'></Card.Img>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))} */}\r\n                    {/* {topMangas.map(manga => (\r\n                        <Card key={manga.id}>\r\n                            <Card.Body>\r\n                                <Card.Title>{manga.title} | {manga.score}</Card.Title>\r\n                                <Card.Img src={manga.image} className='col-md-2'></Card.Img>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))} */}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n)}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}