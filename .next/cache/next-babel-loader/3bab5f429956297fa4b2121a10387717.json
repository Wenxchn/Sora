{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wenxc\\\\Desktop\\\\Sora\\\\pages\\\\index.js\";\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Link from 'next/link';\nimport { Button, Card, Form, Modal, Row, Col } from 'react-bootstrap';\n\nconst Home = () => {\n  const {\n    0: topAnimes,\n    1: setRandomAnimes\n  } = useState([]);\n  const {\n    0: topMangas,\n    1: setRandomMangas\n  } = useState([]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const findRandomAnime = async () => {\n    let random = await getRandomInt(50);\n    let res = await fetch(`https://api.jikan.moe/v3/top/anime/${random}/tv`);\n    let data = await res.json();\n    random = await getRandomInt(50);\n    setRandomAnimes([...topAnimes, {\n      title: data.top[random].title,\n      score: data.top[random].score,\n      id: topAnimes.length,\n      image: data.top[random].image_url\n    }]);\n    console.log(data);\n  };\n\n  const findRandomManga = async () => {\n    let random = await getRandomInt(50);\n    let res = await fetch('https://api.jikan.moe/v3/top/manga/1/manga');\n    let data = await res.json();\n    random = await getRandomInt(50);\n    setRandomMangas([...topMangas, {\n      title: data.top[random].title,\n      score: data.top[random].score,\n      id: topMangas.length,\n      image: data.top[random].image_url\n    }]);\n    console.log(data);\n  };\n\n  const clearAnimeList = async () => {\n    setRandomAnimes([]);\n  };\n\n  const clearMangaList = async () => {\n    setRandomMangas([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-2 mr-2\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-primary\",\n          children: \"Sora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/Wen\",\n          children: \"My Media List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: e => {\n              e.preventDefault();\n              setIsOpen(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Author\",\n                children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                  as: \"select\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              variant: \"light\",\n              onClick: () => setIsOpen(false),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => findRandomAnime(),\n            children: \"Get Random Anime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => clearAnimeList(),\n            children: \"Clear Random Anime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), topAnimes.map(anime => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: anime.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: anime.image,\n              className: \"col-md-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Average MAL Score: \", anime.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \"Type: Anime\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, anime.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => findRandomManga(),\n            children: \"Get Random Manga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => clearMangaList(),\n            children: \"Clear Random Manga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), topMangas.map(manga => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: manga.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: manga.image,\n              className: \"col-md-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Average MAL Score: \", manga.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), \"Type: Manga\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, manga.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/wenxc/Desktop/Sora/pages/index.js"],"names":["React","useState","Link","Button","Card","Form","Modal","Row","Col","Home","topAnimes","setRandomAnimes","topMangas","setRandomMangas","isOpen","setIsOpen","getRandomInt","max","Math","floor","random","findRandomAnime","res","fetch","data","json","title","top","score","id","length","image","image_url","console","log","findRandomManga","clearAnimeList","clearMangaList","e","preventDefault","map","anime","manga"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Link from 'next/link'\r\nimport { Button, Card, Form, Modal, Row, Col } from 'react-bootstrap'\r\n\r\nconst Home = () => {\r\n    const [topAnimes, setRandomAnimes] = useState([])\r\n    const [topMangas, setRandomMangas] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const getRandomInt = (max) => {\r\n        return Math.floor(Math.random() * Math.floor(max))\r\n    }\r\n\r\n    const findRandomAnime = async () => {\r\n        let random = await getRandomInt(50)\r\n        let res = await fetch(`https://api.jikan.moe/v3/top/anime/${random}/tv`)\r\n        let data = await res.json()\r\n        random = await getRandomInt(50)\r\n\r\n        setRandomAnimes([...topAnimes, { title: data.top[random].title, score: data.top[random].score, id: topAnimes.length, image: data.top[random].image_url}])\r\n        console.log(data)\r\n    }\r\n\r\n    const findRandomManga = async () => {\r\n        let random = await getRandomInt(50)\r\n        let res = await fetch('https://api.jikan.moe/v3/top/manga/1/manga')\r\n        let data = await res.json()\r\n        random = await getRandomInt(50)\r\n\r\n        setRandomMangas([...topMangas, { title: data.top[random].title, score: data.top[random].score, id: topMangas.length, image: data.top[random].image_url}])\r\n        console.log(data)\r\n    }\r\n\r\n    const clearAnimeList = async () => {\r\n        setRandomAnimes([])\r\n    }\r\n\r\n    const clearMangaList = async () => {\r\n        setRandomMangas([])\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='ml-2 mr-2'>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className='text-primary'>Sora</h1>\r\n                    <Link href='/Wen'>My Media List</Link>\r\n                    <div>\r\n                        <Form onSubmit={e => {\r\n                            e.preventDefault()\r\n                            setIsOpen(false)\r\n                        }}>\r\n                            <Form.Group>\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n                                    placeholder='Title'\r\n                                />\r\n                                <Form.Label>Author</Form.Label>\r\n                                <Form.Control placeholder='Author'>\r\n                                <Form.Label as='select'>Type</Form.Label>\r\n\r\n                                </Form.Control>\r\n\r\n                            </Form.Group>\r\n                            <Button block type='submit'>Submit</Button>\r\n                            <Button block variant='light' onClick={() => setIsOpen(false)}>Clear</Button>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className='btn-group'>\r\n                        <Button onClick={() => findRandomAnime()}>Get Random Anime</Button>\r\n                        <Button onClick={() => clearAnimeList()}>Clear Random Anime</Button>\r\n                    </div>\r\n                    {topAnimes.map(anime => (\r\n                        <Card key={anime.id}>\r\n                            <Card.Body>\r\n                                <Card.Title>{anime.title}</Card.Title>\r\n                                <Card.Img src={anime.image} className='col-md-4'></Card.Img>\r\n                                <Card.Text>Average MAL Score: {anime.score}</Card.Text>\r\n                                Type: Anime\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </Col>\r\n                <Col>\r\n                    <div className='btn-group'>\r\n                        <Button onClick={() => findRandomManga()}>Get Random Manga</Button>\r\n                        <Button onClick={() => clearMangaList()}>Clear Random Manga</Button>\r\n                    </div>\r\n                    {topMangas.map(manga => (\r\n                            <Card key={manga.id}>\r\n                                <Card.Body>\r\n                                    <Card.Title>{manga.title}</Card.Title>\r\n                                    <Card.Img src={manga.image} className='col-md-4'></Card.Img>\r\n                                    <Card.Text>Average MAL Score: {manga.score}</Card.Text>\r\n                                    Type: Manga\r\n                                </Card.Body>\r\n                            </Card>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n)}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}